-- Eliminar tablas con dependencias (orden correcto)
DROP TABLE IF EXISTS RESERVA_SILLA;
DROP TABLE IF EXISTS BOLETO_SILLA;
DROP TABLE IF EXISTS COMPRA_PRODUCTO;
DROP TABLE IF EXISTS PAGO;
DROP TABLE IF EXISTS BOLETO;
DROP TABLE IF EXISTS RESERVA;
DROP TABLE IF EXISTS COMPRA;
DROP TABLE IF EXISTS SILLA;
DROP TABLE IF EXISTS FUNCION;
DROP TABLE IF EXISTS CLIENTE;
DROP TABLE IF EXISTS ADMIN;
DROP TABLE IF EXISTS SALA;
DROP TABLE IF EXISTS PELICULA;
DROP TABLE IF EXISTS USUARIO;
DROP TABLE IF EXISTS PRODUCTO;
DROP TABLE IF EXISTS TARIFA;

-- Tablas base
CREATE TABLE SALA (
    ID            BIGINT PRIMARY KEY,
    NUMERO_SALA   INT         NOT NULL,
    CAPACIDAD     INT         NOT NULL,
    TIPO          VARCHAR(50) NOT NULL
);

CREATE TABLE PELICULA (
    ID             BIGINT PRIMARY KEY,
    TITULO         VARCHAR(255) NOT NULL,
    GENERO         VARCHAR(100) NOT NULL,
    CLASIFICACION  VARCHAR(20),
    DURACION       INT,                 
    DIRECTOR       VARCHAR(255),
    REPARTO        VARCHAR(500),
    TRAILER        VARCHAR(500),
    SINOPSIS       CLOB,
    ESTADO         VARCHAR(50)
);

CREATE TABLE TARIFA (
    ID           BIGINT PRIMARY KEY,
    NOMBRE       VARCHAR(100) NOT NULL,
    PRECIO_BASE  DECIMAL(10,2) NOT NULL,
    VIGENCIA     DATE NOT NULL
);

CREATE TABLE PRODUCTO (
    ID            BIGINT PRIMARY KEY,
    NOMBRE        VARCHAR(100) NOT NULL,
    DESCRIPCION   VARCHAR(255),
    TIPO          VARCHAR(50) NOT NULL,
    PRECIO_LISTA  DECIMAL(10,2) NOT NULL,
    ESTADO        VARCHAR(50) NOT NULL
);

CREATE TABLE USUARIO (
    ID         BIGINT PRIMARY KEY,
    EMAIL      VARCHAR(255) UNIQUE NOT NULL,
    CONTRASENA VARCHAR(255) NOT NULL,
    ROL        VARCHAR(255) NOT NULL    
);

-- Herencia por clave compartida
CREATE TABLE CLIENTE (
    ID              BIGINT PRIMARY KEY,
    NOMBRE          VARCHAR(100) NOT NULL,
    FECHA_REGISTRO  DATE NOT NULL,
    CONSTRAINT FK_CLIENTE_USUARIO
      FOREIGN KEY (ID) REFERENCES USUARIO(ID)
);

CREATE TABLE ADMIN (
    ID      BIGINT PRIMARY KEY,
    NOMBRE  VARCHAR(100) NOT NULL,
    CONSTRAINT FK_ADMIN_USUARIO
      FOREIGN KEY (ID) REFERENCES USUARIO(ID)
);

CREATE TABLE FUNCION (
    ID          BIGINT PRIMARY KEY,
    FECHA       DATE NOT NULL,
    HORA        TIME NOT NULL,
    ESTADO      VARCHAR(50) NOT NULL,
    PELICULA_ID BIGINT NOT NULL,
    SALA_ID     BIGINT NOT NULL,
    CONSTRAINT FK_FUNCION_PELICULA FOREIGN KEY (PELICULA_ID) REFERENCES PELICULA(ID),
    CONSTRAINT FK_FUNCION_SALA     FOREIGN KEY (SALA_ID)     REFERENCES SALA(ID)
);

CREATE TABLE SILLA (
    ID       BIGINT PRIMARY KEY,
    FILA     VARCHAR(10) NOT NULL,
    NUMERO   INT NOT NULL,
    SALA_ID  BIGINT NOT NULL,
    CONSTRAINT FK_SILLA_SALA FOREIGN KEY (SALA_ID) REFERENCES SALA(ID)
);

CREATE TABLE COMPRA (
    ID          BIGINT PRIMARY KEY,
    TOTAL       DECIMAL(10,2) NOT NULL,
    FECHA       DATE NOT NULL,
    CLIENTE_ID  BIGINT NOT NULL,
    CONSTRAINT FK_COMPRA_CLIENTE FOREIGN KEY (CLIENTE_ID) REFERENCES CLIENTE(ID)
);

CREATE TABLE RESERVA (
    ID                 BIGINT PRIMARY KEY,
    CODIGO             VARCHAR(50) NOT NULL,
    FECHA_VENCIMIENTO  DATE NOT NULL,
    ESTADO             VARCHAR(50) NOT NULL,
    PRECIO_FINAL       DECIMAL(10,2) NOT NULL,
    CLIENTE_ID         BIGINT NOT NULL,
    FUNCION_ID         BIGINT NOT NULL,
    CONSTRAINT FK_RESERVA_CLIENTE FOREIGN KEY (CLIENTE_ID) REFERENCES CLIENTE(ID),
    CONSTRAINT FK_RESERVA_FUNCION FOREIGN KEY (FUNCION_ID) REFERENCES FUNCION(ID)
);

CREATE TABLE PAGO (
    ID         BIGINT PRIMARY KEY,
    METODO     VARCHAR(50) NOT NULL,
    MONTO      DECIMAL(10,2) NOT NULL,
    ESTADO     VARCHAR(50) NOT NULL,
    COMPRA_ID  BIGINT NOT NULL,
    CONSTRAINT FK_PAGO_COMPRA FOREIGN KEY (COMPRA_ID) REFERENCES COMPRA(ID)
);

CREATE TABLE BOLETO (
    ID            BIGINT PRIMARY KEY,
    CODIGO        VARCHAR(50) NOT NULL,
    ESTADO        VARCHAR(50) NOT NULL,
    PRECIO_FINAL  DECIMAL(10,2) NOT NULL,
    COMPRA_ID     BIGINT NOT NULL,
    FUNCION_ID    BIGINT NOT NULL,
    CONSTRAINT FK_BOLETO_COMPRA  FOREIGN KEY (COMPRA_ID)  REFERENCES COMPRA(ID),
    CONSTRAINT FK_BOLETO_FUNCION FOREIGN KEY (FUNCION_ID) REFERENCES FUNCION(ID)
);

-- N:M
CREATE TABLE RESERVA_SILLA (
    RESERVA_ID  BIGINT NOT NULL,
    SILLA_ID    BIGINT NOT NULL,
    PRIMARY KEY (RESERVA_ID, SILLA_ID),
    CONSTRAINT FK_RES_SILLA_RES FOREIGN KEY (RESERVA_ID) REFERENCES RESERVA(ID),
    CONSTRAINT FK_RES_SILLA_SIL FOREIGN KEY (SILLA_ID)   REFERENCES SILLA(ID)
);

CREATE TABLE BOLETO_SILLA (
    BOLETO_ID  BIGINT NOT NULL,
    SILLA_ID   BIGINT NOT NULL,
    PRIMARY KEY (BOLETO_ID, SILLA_ID),
    CONSTRAINT FK_BOL_SILLA_BOL FOREIGN KEY (BOLETO_ID) REFERENCES BOLETO(ID),
    CONSTRAINT FK_BOL_SILLA_SIL FOREIGN KEY (SILLA_ID)  REFERENCES SILLA(ID)
);

CREATE TABLE COMPRA_PRODUCTO (
    COMPRA_ID        BIGINT NOT NULL,
    PRODUCTO_ID      BIGINT NOT NULL,
    CANTIDAD         INT NOT NULL,
    PRECIO_UNITARIO  DECIMAL(10,2) NOT NULL,
    SUBTOTAL         DECIMAL(10,2) NOT NULL,
    PRIMARY KEY (COMPRA_ID, PRODUCTO_ID),
    CONSTRAINT FK_CP_COMPRA   FOREIGN KEY (COMPRA_ID)   REFERENCES COMPRA(ID),
    CONSTRAINT FK_CP_PRODUCTO FOREIGN KEY (PRODUCTO_ID) REFERENCES PRODUCTO(ID)
);